apiVersion: v1
kind: Namespace
metadata:
  name: test
---
apiVersion: v1
data:
  .dockerconfigjson: eyJhdXRocyI6eyJyZWdpc3RyeS5tYXN0ZXIuY29kZWhvcnNlLmNvbSI6eyJ1c2VybmFtZSI6ImFkbWluIiwicGFzc3dvcmQiOiJSb290XzEyMyIsImVtYWlsIjoidGVzdEBxcS5jb20iLCJhdXRoIjoiWVdSdGFXNDZVbTl2ZEY4eE1qTT0ifX19
kind: Secret
metadata:
  name: registry-codehorse
  namespace: test
type: kubernetes.io/dockerconfigjson
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: test-sa
  namespace: test
imagePullSecrets:
  - name: registry-codehorse
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: test-role
  namespace: test
rules:
  - verbs:
      - get
      - list
      - watch
    apiGroups:
      - ""
    resources:
      - pods
      - services
  - verbs:
      - get
      - list
      - watch
    apiGroups:
      - apps
    resources:
      - deployments
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: test-rolebinding
  namespace: test
roleRef:
  apiGroup: "rbac.authorization.k8s.io"
  kind: Role
  name: test-role
subjects:
  - apiGroup: ""
    kind: ServiceAccount
    namespace: test
    name: test-sa
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-deploy
  namespace: test
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: test-pod
  template:
    metadata:
      name: test-pod
      labels:
        app: test-pod
    spec:
      serviceAccountName: test-sa
      containers:
        - name: demo
          image: registry.master.codehorse.com/baseimages/demoapp:v1.0
          imagePullPolicy: Always
          ports:
            - name: demo-port
              containerPort: 80